generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum EGender {
  Laki_laki
  Perempuan
}

enum ERole {
  DEVELOPER
  ADMIN
  MARKETING
}

enum Estatus {
  SAVED
  ANTRI
  PENDING
  PROSES
  BATAL
  SELESAI
}

enum EStatusKawin {
  BELUMKAWIN
  KAWIN
  JANDA
  DUDA
}

enum EStatusDebitur {
  LANCAR
  MACET
  BLACKLIST
}

model User {
  id           String  @id @default(uuid())
  namaLengkap  String
  username     String  @unique
  email        String  @unique
  phone        String  @unique
  password     String
  nip          String
  alamat       String
  kelurahan    String
  kecamatan    String
  kota         String
  provinsi     String
  jenisKelamin EGender
  role         ERole

  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  UserMenu    UserMenu[]
  Dapem       Dapem[]
  DetailDapem DetailDapem[]
}

model UserMenu {
  id     String  @id @default(uuid())
  access String
  path   String
  User   User?   @relation(fields: [userId], references: [id])
  userId String?
}

model ProPem {
  id            String @id @default(uuid())
  name          String
  maxTenor      Int
  maxPlafon     Int
  byAdmin       Float
  byTabungan    Float
  byMaterai     Float
  byTatalaksana Float
  unit          Int
  margin        Float

  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  Dapem     Dapem[]
}

model JePem {
  id      String @id @default(uuid())
  name    String
  penalty Float

  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  Dapem     Dapem[]
}

model Dapem {
  id            String   @id @default(uuid())
  tanggal       DateTime @default(now())
  gajiBersih    Int
  tenor         Int
  plafon        Int
  angsuran      Int
  byAdmin       Float
  byTabungan    Float
  byMaterai     Int
  byTatalaksana Int
  blokir        Int
  penalty       Float
  pelunasan     Int
  margin        Float

  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  ProPem        ProPem       @relation(fields: [proPemId], references: [id])
  Jepem         JePem        @relation(fields: [jePemId], references: [id])
  User          User         @relation(fields: [userId], references: [id])
  proPemId      String
  jePemId       String
  userId        String
  DetailDapem   DetailDapem? @relation(fields: [detailDapemId], references: [id])
  detailDapemId String?
}

model DetailDapem {
  id                String    @id @default(uuid())
  berkasPengajuan   String?
  videoWawancara    String?
  status            Estatus   @default(SAVED)
  tanggalStatus     DateTime
  keterangan        String    @db.Text
  statusCair        Estatus   @default(ANTRI)
  tanggalCair       DateTime?
  noAkad            String?   @unique
  tanggalAkad       DateTime?
  berkasAkad        String?
  buktiPencairan    String?
  nominalPencairan  Int?
  buktiPencairan1   String?
  nominalPencairan1 Int?
  buktiPencairan2   String?
  nominalPencairan2 Int?
  fee               Int?
  buktiFee          String?
  tujuanPenggunaan  String?

  User          User        @relation(fields: [userId], references: [id])
  userId        String
  Dapem         Dapem[]
  DataDebitur   DataDebitur @relation(fields: [dataDebiturId], references: [id])
  dataDebiturId String
}

model DataDebitur {
  id           String         @id @default(uuid())
  nama         String
  nik          String
  noKK         String
  tanggalLahir DateTime
  alamat       String
  kelurahan    String
  kecamatan    String
  kota         String
  provinsi     String
  kodePos      String
  geoLokasi    String
  noTelepon    String
  gender       EGender
  statusKawin  EStatusKawin
  DetailDapem  DetailDapem[]
  DataKeluarga DataKeluarga[]
}

model DataKeluarga {
  id            String      @id @default(uuid())
  nama          String
  noTelepon     String
  hubungan      String
  alamat        String
  gender        EGender
  DataDebitur   DataDebitur @relation(fields: [dataDebiturId], references: [id])
  dataDebiturId String
}
