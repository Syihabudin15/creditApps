generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum EGender {
  Laki_laki
  Perempuan
}

enum ERole {
  DEVELOPER
  ADMIN
  MARKETING
}

model User {
  id           String  @id @default(uuid())
  namaLengkap  String
  username     String  @unique
  email        String  @unique
  phone        String  @unique
  password     String
  nip          String
  alamat       String
  kelurahan    String
  kecamatan    String
  kota         String
  provinsi     String
  jenisKelamin EGender
  role         ERole

  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  UserMenu UserMenu[]
  Dapem    Dapem[]
}

model UserMenu {
  id     String  @id @default(uuid())
  access String
  path   String
  User   User?   @relation(fields: [userId], references: [id])
  userId String?
}

model ProPem {
  id            String @id @default(uuid())
  name          String
  maxTenor      Int
  maxPlafon     Int
  maxAngsuran   Float
  byAdmin       Float
  byTabungan    Float
  byMaterai     Float
  byTatalaksana Float
  unit          Int
  margin        Float

  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  Dapem     Dapem[]
}

model JePem {
  id      String @id @default(uuid())
  name    String
  penalty Float

  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  Dapem     Dapem[]
}

model Dapem {
  id            String   @id @default(uuid())
  tanggal       DateTime @default(now())
  nik           String
  namaPemohon   String
  alamat        String
  gajiBersih    Int
  tenor         Int
  plafon        Int
  angsuran      Int
  byAdmin       Float
  byTabungan    Float
  byMaterai     Int
  byTatalaksana Int
  blokir        Int
  penalty       Float
  pelunasan     Int
  margin        Float

  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  ProPem   ProPem @relation(fields: [proPemId], references: [id])
  Jepem    JePem  @relation(fields: [jePemId], references: [id])
  User     User   @relation(fields: [userId], references: [id])
  proPemId String
  jePemId  String
  userId   String
}
